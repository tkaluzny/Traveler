@model Traveler.Models.Travel

@{
    ViewBag.Title = "Create";
}

<h2>Create</h2>


@using (Html.BeginForm())
{
    @Html.AntiForgeryToken()

    <div class="form-horizontal">
        <h4>Travel</h4>
        <hr />
        @Html.ValidationSummary(true, "", new { @class = "text-danger" })
        <div class="form-group">
            @Html.LabelFor(model => model.Name, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.Name, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.Name, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.Description, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.Description, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.Description, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            <label class="control-label col-md-2" for="places">Miejsca</label>
            <div class="col-md-10">
                <button type="button" class="btn btn-default" data-toggle="modal" data-target="#addCityModal" style="margin-bottom: 15px;">
                    Dodaj miejsce
                </button>
                <table class="table hidden" id="PlacesTable">
                    <tr>
                        <th>Państwo</th>
                        <th>Miasto</th>
                        <th></th>
                    </tr>
                </table>
            </div>
        </div>

        <div class="form-group">
            <div class="col-md-offset-2 col-md-10">
                <input type="submit" value="Zapisz" class="btn btn-primary" />
                <a class="btn btn-default" href="@Url.Action("Index")">Anuluj</a>
            </div>
        </div>
    </div>
}

<!-- Modal -->
<div class="modal fade" id="addCityModal" tabindex="-1" role="dialog">
    <div class="modal-dialog" role="document">
        <div class="modal-content">
            <div class="modal-header">
                <button type="button" class="close" data-dismiss="modal" aria-label="Close"><span aria-hidden="true">&times;</span></button>
                <h4 class="modal-title" id="myModalLabel">Dodaj miejsce</h4>
            </div>
            <div class="modal-body">
                <form class="form-horizontal">
                    <div class="form-group">
                        <label for="Country" class="control-label col-md-2">Państwo</label>
                        <div class="col-md-10">
                            @Html.DropDownList("Country", null, htmlAttributes: new { @class = "form-control", @onchange = "onCountrySelect(this.value)" })
                        </div>
                    </div>
                    <div id="citiesFormGroup" class="form-group">
                        <label for="City" class="control-label col-md-2">Miasto</label>
                        <div class="col-md-10">
                            <select id="City" name="City" class="form-control"></select>
                        </div>
                    </div>
                </form>
            </div>
            <div class="modal-footer">
                <button type="button" class="btn btn-link" data-dismiss="modal">Anuluj</button>
                <button type="button" class="btn btn-default" data-dismiss="modal" onclick="addPlace();">Dodaj</button>
            </div>
        </div>
    </div>
</div>


<script>
    var countryId = $("#Country").val();
    var cities = [];

    if (countryId) {
        onCountrySelect(countryId);
    }

    function onCountrySelect(countryID) {
       $('#City').empty();

        $.ajax('/Cities/ByCountry/' + countryID).done(function (data) {
            cities = data;
            for (var i = 0; i < data.length; i++) {
                appendOptionToCitiesSelect(data[i].CityID, data[i].Name);
            }
        });
    }

    function addPlace() {
        var CityID = Number($('#City').val());
        if (!$("#City_" + CityID).length) {
            $('#PlacesTable').removeClass('hidden');
            for (var i = 0; i < cities.length; i++) {
                if (cities[i].CityID == CityID) {
                    appendPlace(cities[i]);
                }
            }
        }
    }

    function removePlace(id) {
        $('#City_' + id).remove();
        $('#City_Input_' + id).remove();
    }

    function appendPlace(city) {
       
        var markup = ['<tr id="City_' + city.CityID + '">'];
        markup.push('<td>' + city.Country.Name + '</td>');
        markup.push('<td>' + city.Name + '</td>');
        markup.push('<td><a class="link" href="#" onclick="removePlace(' + city.CityID + ')">Usuń</a></td>');
        markup.push('</tr>');
        $('#PlacesTable').append(markup.join(''));

        var hiddenInput = '<input id="City_Input_' + city.CityID + '" type="hidden" name="CityID" value="' + city.CityID + '">';

        $('#PlacesTable').after(hiddenInput);
    }

    function appendOptionToCitiesSelect(id, name) {
        $('#City').append('<option value="' + id + '">' + name + '</option>');
    }
</script>


@section Scripts {
    @Scripts.Render("~/bundles/jqueryval")
}
